site_name: Alamgir Book
site_description: Learning Book - Learn, practice, code, and document programming topics.
site_url: https://alamgir-ahosain.github.io/alamgir-book/
site_author: Alamgir Hosain
# repo_url: https://github.com/alamgir-ahosain/alamgir-book
# repo_name: alamgir-ahosain/alamgir-book
theme:
  name: material
  icon:
    logo: fontawesome/solid/a
    # repo: fontawesome/brands/github
  favicon: assets/favicon.png
  features:
    # - content.action.edit
    # - content.action.view
    - content.code.annotate
    - content.code.copy
    - content.tooltips
    - content.tabs.link

    - navigation.instant
    - navigation.instant.progress
    - navigation.tabs
    - navigation.sections
    - navigation.footer
    - navigation.indexes
    - navigation.top
    - navigation.tracking
    - navigation.path

    - search.highlight
    - search.share
    - search.suggest

    # - toc.follow
    # - toc.integrate

  palette:
    - media: "(prefers-color-scheme: light)"
      scheme: default
      primary: teal
      accent: deep orange
      toggle:
        icon: material/weather-night
        name: Switch to dark mode
    - media: "(prefers-color-scheme: dark)"
      scheme: slate
      primary: teal
      accent: deep orange
      toggle:
        icon: material/weather-sunny
        name: Switch to light mode
  font:
    text: Roboto
    code: Roboto Mono

plugins:
  - git-authors
  - git-committers:
      enabled: true
      repository: alamgir-ahosain/alamgir-book
      branch: main
      token: !ENV GH_TOKEN
      
  - git-revision-date-localized:
      type: date
      fallback_to_build_date: false
      enable_creation_date: true
      enabled: true
  - search:
      separator: '[\s\-,:!=\[\]()"`/]+|\.(?!\d)|&[lg]t;|(?!\b)(?=[A-Z][a-z])'
      links: 
      links_attr_map:
        target: _blank
      links_noopener: true
      enabled: true
      assets_exclude:
        - cdn.jsdelivr.net/npm/mathjax@3/*
        - giscus.app/*
extra:
  analytics:
    provider: google
    property: !ENV GOOGLE_ANALYTICS_KEY
  social:
    - icon: fontawesome/brands/github
      link: https://github.com/alamgir-ahosain
    - icon: fontawesome/brands/linkedin
      link: https://www.linkedin.com/in/alamgir-ahosain/
    - icon: simple/medium
      link: https://medium.com/@alamgir.ahosain

extra_css:
  - stylesheets/extra.css

markdown_extensions:
  - pymdownx.highlight:
      anchor_linenums: true
  - pymdownx.inlinehilite
  - pymdownx.snippets
  - pymdownx.arithmatex:
      generic: true
  - footnotes
  -  admonition
  - pymdownx.details
  - pymdownx.superfences
  - pymdownx.mark
  - attr_list
  - pymdownx.blocks.caption
  - pymdownx.emoji:
      emoji_index: !!python/name:material.extensions.emoji.twemoji
      emoji_generator: !!python/name:material.extensions.emoji.to_svg
  - md_in_html
  - pymdownx.tabbed:
      alternate_style: true
  - pymdownx.superfences:
      custom_fences:
        - name: mermaid
          class: mermaid
          format: !!python/name:pymdownx.superfences.fence_code_format

copyright: |
  Copyright &copy; <a href="https://www.linkedin.com/in/alamgir-ahosain/"  target="_blank" rel="noopener">Alamgir Hosain</a>

nav:
  -  Home: index.md
  - Engineering Fundamentals:
    - 1. Framework: engineering-fundamentals/framework.md    
    - 2. JAR vs WAR: engineering-fundamentals/jar-vs-war.md    
    - 3. Maven vs Gradle: engineering-fundamentals/maven-vs-gradle.md
    - 4. Microservice Architecture : engineering-fundamentals/microservice-architecture.md
    - 5. Monolithic Architecture : engineering-fundamentals/monolithic-architecture.md   
    - 6. UUID: engineering-fundamentals/uuid.md    
  - Spring Framework:
    - 1. Introduction: spring-framework/1-spring-intro.md 
    - 2. Spring Framework Modules: spring-framework/2-spring-modules.md
    - 3. Pojo and Bean: spring-framework/3-pojo-vs-bean.md
    - 4. IoC Container: spring-framework/4-ioc-container.md
    - 5. Dependency Injection: spring-framework/5-dependency-injection.md
    - 6. Configuration Metadata: spring-framework/6-configuration-metadata.md
    - 7. Dependency Injection via XML: spring-framework/7-di-xml.md
    - 8. Creating Bean via Annotation: spring-framework/8-creating-bean-annotation.md
    - 9. Dependency Injection via Annotation: spring-framework/9-di-annotation.md
    - 10. Inject Primitive and String Type: spring-framework/10-inject-primitive.md
    - 11. Spring Bean Scopes: spring-framework/11-bean-scope.md
    - 12. Spring Bean Life Cycles: spring-framework/12-life-cycle-method.md
    - 13. Spring JDBC: spring-framework/13-spring-jdbc.md

  - Spring Boot:
    - 1. Introduction: spring-boot/1-introduction.md
    - 2. Spring Boot Runner: spring-boot/2-spring-runner.md
    - 3. Spring Data JPA:
      - Here:
        - 3.1 Entity class and JPA Repository: spring-boot/data-jpa/1-entity-jpa-repository.md
        - 3.2 CRUD workflow: spring-boot/data-jpa/2-crud-workflow.md
        - 3.3 CRUD Operation: spring-boot/data-jpa/3-crud-operation.md
        - 3.4 DDL - Data Definition Language: spring-boot/data-jpa/4-ddl.md
        - 3.5 Sorting and Pagination: spring-boot/data-jpa/5-sorting-pagination.md
        - 3.6 Native SQL Query: spring-boot/data-jpa/6-native-sql.md
        - 3.7 JPQL Query: spring-boot/data-jpa/7-jpql.md
        - 3.8 Entity Relationship Mapping: spring-boot/data-jpa/8-entity-mapping.md

    - 4.Spring Web MVC:
      - Here:
        - 4.1 HTTP Port and Context Path: spring-boot/web-mvc/1-port-and-contextpath.md
        - 4.2 Stereotype Annotations: spring-boot/web-mvc/2-stereotype-annotations.md
        - 4.3 MVC Architecture: spring-boot/web-mvc/3-mvc-architecture.md
        - 4.4 MVC Workflow: spring-boot/web-mvc/4-mvc-workflow.md
        - 4.5 How Spring MVC Works Internally?: spring-boot/web-mvc/5-how-mvc-works.md
        - 4.6 Monolithic Architecture: spring-boot/web-mvc/6-monolithic-architecture.md
        - 4.7 RequestMapping and @GetMapping: spring-boot/web-mvc/7-requestmapping-getmapping.md
        - 4.8 ModelAndView: spring-boot/web-mvc/8-ModelAndView.md
        - "4.9 REST Service":
          -  4.9 SOAP vs REST: spring-boot/web-mvc/9-SOAP-vs-REST.md
          -  4.10 Swagger API Documentation : spring-boot/web-mvc/10-Swagger API Documentation.md
          -  4.11 Controller vs RestController : spring-boot/web-mvc/11-Controller vs RestController.md
          -  4.12 RequestMapping Annotation : spring-boot/web-mvc/12-requestmapping.md
          -  4.13 JSONProperty : spring-boot/web-mvc/13-Json Property.md
          -  4.14 RequestBody Validation : spring-boot/web-mvc/14-requestBody validation.md
          -  4.15 Path Parameters vs Query Parameters : spring-boot/web-mvc/15-Path vs Query Parameters.md
          -  4.16 HTTP Response Status Code : spring-boot/web-mvc/16-HTTP responce status code.md
          -  4.17 HTTP Headers : spring-boot/web-mvc/17-HTTP headers.md
          -  4.18 Consuming REST Service : spring-boot/web-mvc/18-consuming-rest-api.md
          -  4.19 Exception Handling : spring-boot/web-mvc/19-exception-handling.md
    - 5. Spring Boot Actuator: spring-boot/5-actuator.md
    - 6. Config Files -  properties vs yml, Application vs Bootstrap : spring-boot/6-yaml-vs-properties.md
    - 7. Spring Boot Profiles : spring-boot/7-profiles.md
    - 8. Logging in Spring Boot : spring-boot/8-logging.md
    - 9. Spring Security:
      - Here:
        - 9.1 Generate JWT Token: spring-boot/spring-security/1-JWT-token-generate copy.md
        - 9.2 Important Class and Their Rules : spring-boot/spring-security/2-authentication-class.md
        - 9.3 JWT Request workflow : spring-boot/spring-security/3-request-workflow.md

       
        
        

        
  


    